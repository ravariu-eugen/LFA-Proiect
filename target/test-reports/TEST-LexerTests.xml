<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="DESKTOP-EA3VV5D" name="LexerTests" tests="8" errors="0" failures="2" skipped="0" time="0.243" timestamp="2023-01-08T14:21:08">
          <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://ubuntu.com/"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/><property name="sun.java.command" value="/home/eugen/.cache/sbt/boot/sbt-launch/1.8.0/sbt-launch-1.8.0.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2022-01-18"/><property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.14+9-Ubuntu-0ubuntu2.20.04"/><property name="user.name" value="eugen"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/eugen/.cache/JNA/temp/jna5244457777846498961.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.14"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.vendor" value="Ubuntu"/><property name="scala.ext.dirs" value="/home/eugen/.sbt/1.0/java9-rt-ext-ubuntu_11_0_14"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/home/eugen/.cache/sbt/boot/sbt-launch/1.8.0/sbt-launch-1.8.0.jar"/><property name="java.vm.vendor" value="Ubuntu"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Bucharest"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/eugen"/><property name="user.language" value="en"/><property name="sbt.script" value="/usr/bin/sbt"/><property name="sbt.ipcsocket.tmpdir" value="/tmp/.sbt6e6a3aaf/ipcsocket"/><property name="swoval.tmpdir" value="/tmp/.sbt6e6a3aaf/swoval"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="5.10.16.3-microsoft-standard-WSL2"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/usr/lib/wsl/lib:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/><property name="user.dir" value="/mnt/e/Facultate/anul3/LFA/proiect/tema"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="11.0.14+9-Ubuntu-0ubuntu2.20.04"/><property name="java.class.version" value="55.0"/>
    </properties>
          <testcase classname="LexerTests" name="Test lexer: simple concat (2p)" time="0.131">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: simple union (2p)" time="0.015">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: space and zeros char (5p)" time="0.015">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: space and zeros char (5p)-1" time="0.006">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: ones and twos char (8p)" time="0.018">
                      <failure message="/mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/LexerTests.scala:64 assertion failed
63:    assert(Lexer(spec).lex(&quot;1001010&quot;) == Right(List((&quot;1001010&quot;, &quot;PATTERN&quot;))))
[7m64:    assert(Lexer(spec).lex(&quot;1101010101&quot;) == Right(List((&quot;1101010101&quot;, &quot;PATTERN&quot;))))[0m
65:    assert(Lexer(spec).lex(&quot;2110000101112&quot;) == Right(List((&quot;2&quot;, &quot;TWO&quot;), (&quot;11000010111&quot;, &quot;PATTERN&quot;), (&quot;2&quot;, &quot;TWO&quot;))))" type="munit.FailException">munit.FailException: /mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/LexerTests.scala:64 assertion failed
63:    assert(Lexer(spec).lex(&quot;1001010&quot;) == Right(List((&quot;1001010&quot;, &quot;PATTERN&quot;))))
[7m64:    assert(Lexer(spec).lex(&quot;1101010101&quot;) == Right(List((&quot;1101010101&quot;, &quot;PATTERN&quot;))))[0m
65:    assert(Lexer(spec).lex(&quot;2110000101112&quot;) == Right(List((&quot;2&quot;, &quot;TWO&quot;), (&quot;11000010111&quot;, &quot;PATTERN&quot;), (&quot;2&quot;, &quot;TWO&quot;))))
	at munit.FunSuite.assert(FunSuite.scala:11)
	at LexerTests.$anonfun$new$41(LexerTests.scala:64)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="LexerTests" name="Test lexer: plus and star char (8p)" time="0.016">
                      
                    </testcase><testcase classname="LexerTests" name="Test lexer: whitespaces char (10p)" time="0.042">
                      
                    </testcase><testcase classname="LexerTests" name="expected error running tests" time="0.0">
                      <failure message="Java heap space" type="java.lang.OutOfMemoryError">java.lang.OutOfMemoryError: Java heap space
</failure>
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>