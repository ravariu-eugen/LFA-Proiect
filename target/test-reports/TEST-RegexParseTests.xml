<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="DESKTOP-EA3VV5D" name="RegexParseTests" tests="32" errors="0" failures="5" skipped="0" time="1.453" timestamp="2023-01-08T14:21:08">
          <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://ubuntu.com/"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/><property name="sun.java.command" value="/home/eugen/.cache/sbt/boot/sbt-launch/1.8.0/sbt-launch-1.8.0.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2022-01-18"/><property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.14+9-Ubuntu-0ubuntu2.20.04"/><property name="user.name" value="eugen"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/eugen/.cache/JNA/temp/jna5244457777846498961.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.14"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.vendor" value="Ubuntu"/><property name="scala.ext.dirs" value="/home/eugen/.sbt/1.0/java9-rt-ext-ubuntu_11_0_14"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/home/eugen/.cache/sbt/boot/sbt-launch/1.8.0/sbt-launch-1.8.0.jar"/><property name="java.vm.vendor" value="Ubuntu"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Bucharest"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/eugen"/><property name="user.language" value="en"/><property name="sbt.script" value="/usr/bin/sbt"/><property name="sbt.ipcsocket.tmpdir" value="/tmp/.sbt6e6a3aaf/ipcsocket"/><property name="swoval.tmpdir" value="/tmp/.sbt6e6a3aaf/swoval"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="5.10.16.3-microsoft-standard-WSL2"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/usr/lib/wsl/lib:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/><property name="user.dir" value="/mnt/e/Facultate/anul3/LFA/proiect/tema"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="11.0.14+9-Ubuntu-0ubuntu2.20.04"/><property name="java.class.version" value="55.0"/>
    </properties>
          <testcase classname="RegexParseTests" name="single char (1p)" time="0.11">
                      
                    </testcase><testcase classname="RegexParseTests" name="single concat (1p)" time="0.005">
                      
                    </testcase><testcase classname="RegexParseTests" name="single union (1p)" time="0.036">
                      <failure message="/mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:25 assertion failed
24:    val s = Regex.toPrenex(str)
[7m25:    assert(Dfa.fromPrenex(s).accepts(&quot;a&quot;))[0m
26:    assert(Dfa.fromPrenex(s).accepts(&quot;b&quot;))" type="munit.FailException">munit.FailException: /mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:25 assertion failed
24:    val s = Regex.toPrenex(str)
[7m25:    assert(Dfa.fromPrenex(s).accepts(&quot;a&quot;))[0m
26:    assert(Dfa.fromPrenex(s).accepts(&quot;b&quot;))
	at munit.FunSuite.assert(FunSuite.scala:11)
	at RegexParseTests.$anonfun$new$19(RegexParseTests.scala:25)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="RegexParseTests" name="single star (1p)" time="0.003">
                      <failure message="/mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:37 assertion failed
36:    assert(Dfa.fromPrenex(s).accepts(&quot;a&quot;))
[7m37:    assert(Dfa.fromPrenex(s).accepts(&quot;aa&quot;))[0m
38:    assert(Dfa.fromPrenex(s).accepts(&quot;aaaaaaaaa&quot;))" type="munit.FailException">munit.FailException: /mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:37 assertion failed
36:    assert(Dfa.fromPrenex(s).accepts(&quot;a&quot;))
[7m37:    assert(Dfa.fromPrenex(s).accepts(&quot;aa&quot;))[0m
38:    assert(Dfa.fromPrenex(s).accepts(&quot;aaaaaaaaa&quot;))
	at munit.FunSuite.assert(FunSuite.scala:11)
	at RegexParseTests.$anonfun$new$30(RegexParseTests.scala:37)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="RegexParseTests" name="union concat 1 (2p)" time="0.005">
                      
                    </testcase><testcase classname="RegexParseTests" name="union concat 2 (2p)" time="0.003">
                      
                    </testcase><testcase classname="RegexParseTests" name="multiple union (3p)" time="0.007">
                      
                    </testcase><testcase classname="RegexParseTests" name="union concat with par 1 (3p)" time="0.005">
                      
                    </testcase><testcase classname="RegexParseTests" name="union concat with par 2 (3p)" time="0.008">
                      
                    </testcase><testcase classname="RegexParseTests" name="union star (2p)" time="0.006">
                      
                    </testcase><testcase classname="RegexParseTests" name="concat star (3p)" time="0.009">
                      <failure message="/mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:116 assertion failed
115:    assert(Dfa.fromPrenex(s).accepts(&quot;abbbbbbbbc&quot;))
[7m116:    assert(Dfa.fromPrenex(s).accepts(&quot;acddd&quot;))[0m
117:  }" type="munit.FailException">munit.FailException: /mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:116 assertion failed
115:    assert(Dfa.fromPrenex(s).accepts(&quot;abbbbbbbbc&quot;))
[7m116:    assert(Dfa.fromPrenex(s).accepts(&quot;acddd&quot;))[0m
117:  }
	at munit.FunSuite.assert(FunSuite.scala:11)
	at RegexParseTests.$anonfun$new$101(RegexParseTests.scala:116)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="RegexParseTests" name="complex union concat (6p)" time="0.004">
                      <failure message="/mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:126 assertion failed
125:    assert(Dfa.fromPrenex(s).accepts(&quot;c&quot;))
[7m126:    assert(Dfa.fromPrenex(s).accepts(&quot;de&quot;))[0m
127:    assert(!Dfa.fromPrenex(s).accepts(&quot;ab&quot;))" type="munit.FailException">munit.FailException: /mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:126 assertion failed
125:    assert(Dfa.fromPrenex(s).accepts(&quot;c&quot;))
[7m126:    assert(Dfa.fromPrenex(s).accepts(&quot;de&quot;))[0m
127:    assert(!Dfa.fromPrenex(s).accepts(&quot;ab&quot;))
	at munit.FunSuite.assert(FunSuite.scala:11)
	at RegexParseTests.$anonfun$new$116(RegexParseTests.scala:126)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="RegexParseTests" name="all basic 1 (6p)" time="0.006">
                      
                    </testcase><testcase classname="RegexParseTests" name="all basic 2 (6p)" time="0.013">
                      
                    </testcase><testcase classname="RegexParseTests" name="all basic 3 (6p)" time="0.002">
                      <failure message="/mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:157 assertion failed
156:    val s = Regex.toPrenex(str)
[7m157:    assert(Dfa.fromPrenex(s).accepts(&quot;&quot;))[0m
158:    assert(Dfa.fromPrenex(s).accepts(&quot;b&quot;))" type="munit.FailException">munit.FailException: /mnt/e/Facultate/anul3/LFA/proiect/tema/src/test/scala/RegexParseTests.scala:157 assertion failed
156:    val s = Regex.toPrenex(str)
[7m157:    assert(Dfa.fromPrenex(s).accepts(&quot;&quot;))[0m
158:    assert(Dfa.fromPrenex(s).accepts(&quot;b&quot;))
	at munit.FunSuite.assert(FunSuite.scala:11)
	at RegexParseTests.$anonfun$new$151(RegexParseTests.scala:157)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
</failure>
                    </testcase><testcase classname="RegexParseTests" name="all basic 4 (6p)" time="0.009">
                      
                    </testcase><testcase classname="RegexParseTests" name="all basic 5 (6p)" time="0.006">
                      
                    </testcase><testcase classname="RegexParseTests" name="all basic 6 (6p)" time="0.01">
                      
                    </testcase><testcase classname="RegexParseTests" name="all basic 7 (6p)" time="0.012">
                      
                    </testcase><testcase classname="RegexParseTests" name="eps (1p)" time="0.002">
                      
                    </testcase><testcase classname="RegexParseTests" name="escaped chars 1 (1p)" time="0.003">
                      
                    </testcase><testcase classname="RegexParseTests" name="escaped chars 2 (1p)" time="0.002">
                      
                    </testcase><testcase classname="RegexParseTests" name="0 to 9 (2p)" time="0.033">
                      
                    </testcase><testcase classname="RegexParseTests" name="a to z (2p)" time="0.014">
                      
                    </testcase><testcase classname="RegexParseTests" name="A to Z (2p)" time="0.011">
                      
                    </testcase><testcase classname="RegexParseTests" name="plus (1p)" time="0.002">
                      
                    </testcase><testcase classname="RegexParseTests" name="question mark (1p)" time="0.002">
                      
                    </testcase><testcase classname="RegexParseTests" name="q and p (1p)" time="0.005">
                      
                    </testcase><testcase classname="RegexParseTests" name="0 to 9 star (3p)" time="0.021">
                      
                    </testcase><testcase classname="RegexParseTests" name="squared ops (3p)" time="0.663">
                      
                    </testcase><testcase classname="RegexParseTests" name="complex (6p)" time="0.388">
                      
                    </testcase><testcase classname="RegexParseTests" name="all (6p)" time="0.048">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>